<?xml version="1.0" encoding="utf-8"?>
<Test Type="Bootup" Name="1D">
  <Step Type="Bootup">
    <Actor Name="">
      <Type>Port</Type>
      <SubType>Serial</SubType>
      <Command Type="LMU">
        <Format></Format>
        <Parameter Prompt="Command" Access="Show">
          <Value>?CO</Value>
        </Parameter>
      </Command>
    </Actor>
    <Response Header="" Trailer="&gt;" Delimiter="&#xD;&#xA;">
      <!--A response may contain multiple elements in the event one UUT response message contains multiple response elements separated by the response delimiter. (i.e. the ?CO command)-->
      <Element>
        <KeyExpression>value like '*'</KeyExpression>
        <!--A response element may contain multiple expected responses in the event one response element contains multiple sub fields. (i.e. the temperature response)-->
        <!--NOTE: If sub fields exist in a response element, each must have a unique key specified. The sub field value is expected to follow the key directly, delimited by one or more whitespace characters.-->
        <Expected Trim="true">
          <!--TODO: Add one or more expressions to test the response element value against.-->
          <!--1. Expressions are in the form of a simple expression, i.e. value <= 70, value like 'recvr:*', value len 24-->
          <!--2. Expressions may only contain a single parameter operand named <value> evaluated against a constant integer, double, or string.-->
          <!--3. String constants must be enclosed in single quotes, i.e. 'rcvr:*'-->
          <!--4. Supported operators: =, !=, <>, <=, >=, <, >, len, like-->
          <!--5. The like operator supports both VB and T-SQL like operation wildcards.-->
          <!--6. Multiple expressions must all be true for a response element to pass evaluation.-->
          <!--[Optional] <KeyExpression>value like 'recvr*'</KeyExpression>-->
          <Expression>
            <!--TODO: Add at least one expression.-->
          </Expression>
          <Destination>
            <Name />
            <Default />
          </Destination>
          <FailureMessage />
        </Expected>
      </Element>
    </Response>
    <Timeout>2</Timeout>
    <BeginState>DSHELL</BeginState>
    <EndState>DSHELL</EndState>
    <Retries>1</Retries>
    <ContinueOnError>false</ContinueOnError>
    <CompleteOnTimeout>false</CompleteOnTimeout>
  </Step>
  <Step Type="Bootup">
    <Actor Name="">
      <Type>Port</Type>
      <SubType>Serial</SubType>
      <Command Type="LMU">
        <Format></Format>
        <Parameter Prompt="Command" Access="Show">
          <Value>SEARCHBCN NONE</Value>
        </Parameter>
      </Command>
    </Actor>
    <Response Header="" Trailer="&gt;" Delimiter="&#xD;&#xA;">
      <!--A response may contain multiple elements in the event one UUT response message contains multiple response elements separated by the response delimiter. (i.e. the ?CO command)-->
      <Element>
        <KeyExpression>value like '*'</KeyExpression>
        <!--A response element may contain multiple expected responses in the event one response element contains multiple sub fields. (i.e. the temperature response)-->
        <!--NOTE: If sub fields exist in a response element, each must have a unique key specified. The sub field value is expected to follow the key directly, delimited by one or more whitespace characters.-->
        <Expected Trim="true">
          <!--TODO: Add one or more expressions to test the response element value against.-->
          <!--1. Expressions are in the form of a simple expression, i.e. value <= 70, value like 'recvr:*', value len 24-->
          <!--2. Expressions may only contain a single parameter operand named <value> evaluated against a constant integer, double, or string.-->
          <!--3. String constants must be enclosed in single quotes, i.e. 'rcvr:*'-->
          <!--4. Supported operators: =, !=, <>, <=, >=, <, >, len, like-->
          <!--5. The like operator supports both VB and T-SQL like operation wildcards.-->
          <!--6. Multiple expressions must all be true for a response element to pass evaluation.-->
          <!--[Optional] <KeyExpression>value like 'recvr*'</KeyExpression>-->
          <Expression>
            <!--TODO: Add at least one expression.-->
          </Expression>
          <Destination>
            <Name />
            <Default />
          </Destination>
          <FailureMessage />
        </Expected>
      </Element>
    </Response>
    <Timeout>2</Timeout>
    <BeginState>DSHELL</BeginState>
    <EndState>DSHELL</EndState>
    <Retries>1</Retries>
    <ContinueOnError>false</ContinueOnError>
    <CompleteOnTimeout>false</CompleteOnTimeout>
  </Step>
  <Step Type="Bootup">
    <Actor Name="">
      <Type>Port</Type>
      <SubType>Serial</SubType>
      <Command Type="LMU">
        <Format></Format>
        <Parameter Prompt="Command" Access="Show">
          <Value>G</Value>
        </Parameter>
      </Command>
    </Actor>
    <Response Header="" Trailer="&gt;" Delimiter="&#xD;&#xA;">
      <!--A response may contain multiple elements in the event one UUT response message contains multiple response elements separated by the response delimiter. (i.e. the ?CO command)-->
      <Element>
        <KeyExpression>value like '*'</KeyExpression>
        <!--A response element may contain multiple expected responses in the event one response element contains multiple sub fields. (i.e. the temperature response)-->
        <!--NOTE: If sub fields exist in a response element, each must have a unique key specified. The sub field value is expected to follow the key directly, delimited by one or more whitespace characters.-->
        <Expected Trim="true">
          <!--TODO: Add one or more expressions to test the response element value against.-->
          <!--1. Expressions are in the form of a simple expression, i.e. value <= 70, value like 'recvr:*', value len 24-->
          <!--2. Expressions may only contain a single parameter operand named <value> evaluated against a constant integer, double, or string.-->
          <!--3. String constants must be enclosed in single quotes, i.e. 'rcvr:*'-->
          <!--4. Supported operators: =, !=, <>, <=, >=, <, >, len, like-->
          <!--5. The like operator supports both VB and T-SQL like operation wildcards.-->
          <!--6. Multiple expressions must all be true for a response element to pass evaluation.-->
          <!--[Optional] <KeyExpression>value like 'recvr*'</KeyExpression>-->
          <Expression>
            <!--TODO: Add at least one expression.-->
          </Expression>
          <Destination>
            <Name />
            <Default />
          </Destination>
          <FailureMessage />
        </Expected>
      </Element>
    </Response>
    <Timeout>60</Timeout>
    <BeginState>DSHELL</BeginState>
    <EndState>DSHELL</EndState>
    <Retries>1</Retries>
    <ContinueOnError>false</ContinueOnError>
    <CompleteOnTimeout>false</CompleteOnTimeout>
  </Step>
  <Step Type="Bootup">
    <Actor Name="">
      <Type>Port</Type>
      <SubType>Serial</SubType>
      <Command Type="LMU">
        <Format></Format>
        <Parameter Prompt="Command" Access="Show">
          <Value>reset</Value>
        </Parameter>
      </Command>
    </Actor>
    <Response Header="" Trailer="&gt;" Delimiter="&#xD;&#xA;">
      <!--A response may contain multiple elements in the event one UUT response message contains multiple response elements separated by the response delimiter. (i.e. the ?CO command)-->
      <Element>
        <KeyExpression>value like 'Booted From:*'</KeyExpression>
        <!--A response element may contain multiple expected responses in the event one response element contains multiple sub fields. (i.e. the temperature response)-->
        <!--NOTE: If sub fields exist in a response element, each must have a unique key specified. The sub field value is expected to follow the key directly, delimited by one or more whitespace characters.-->
        <Expected Trim="true">
          <!--TODO: Add one or more expressions to test the response element value against.-->
          <!--1. Expressions are in the form of a simple expression, i.e. value <= 70, value like 'recvr:*', value len 24-->
          <!--2. Expressions may only contain a single parameter operand named <value> evaluated against a constant integer, double, or string.-->
          <!--3. String constants must be enclosed in single quotes, i.e. 'rcvr:*'-->
          <!--4. Supported operators: =, !=, <>, <=, >=, <, >, len, like-->
          <!--5. The like operator supports both VB and T-SQL like operation wildcards.-->
          <!--6. Multiple expressions must all be true for a response element to pass evaluation.-->
          <!--[Optional] <KeyExpression>value like 'recvr*'</KeyExpression>-->
          <Expression>
            <!--TODO: Add at least one expression.-->
          </Expression>
          <Destination>
            <Name />
            <Default />
          </Destination>
          <FailureMessage />
        </Expected>
      </Element>
    </Response>
    <Timeout>1000</Timeout>
    <BeginState>DSHELL</BeginState>
    <EndState>BOOT</EndState>
    <Retries>1</Retries>
    <ContinueOnError>false</ContinueOnError>
    <CompleteOnTimeout>false</CompleteOnTimeout>
  </Step>
</Test>